%YAML:1.0

###############################################
#common parameters
mloam_result_save: 0
output_path: "/home/jjiao/catkin_ws/src/localization/rpg_trajectory_evaluation/results/simu_jackal_mloam/test/mloam/test_mloam_eight/"
mloam_odom_path: "stamped_mloam_odom_estimate.txt"
mloam_map_path: "stamped_mloam_map_estimate.txt"
mloam_gt_path: "stamped_groundtruth.txt"

#Multiple thread support
multiple_thread: 0

#optimization PARAMETERS
max_solver_time: 0.07  # max solver itration time (s), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 0 # keyframe selection threshold (pixel)

evaluate_residual: 1
optimal_odometry: 1

###############################################
# laser parameters
num_of_laser: 2
n_scans: 16

# segmentation parameters
segment_cloud: 1
horizon_scan: 400
min_cluster_size: 15
min_line_size: 10
segment_valid_point_num: 5
segment_valid_line_num: 3
segment_theta: 0.53

# window sizes
window_size: 8
opt_window_size: 3

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Have no prior about extrinsic parameters. We will initialize and optimize around them
optimal_extrinsic: 0

body_T_laser: !!opencv-matrix
   rows: 2
   cols: 7
   dt: d
   # data: [0, 0, 0, 1, 0, 0, 0,
   #        0, 0, 0, 1, 0, 0, 0] # qx qy qz qw px py pz
   # data: [0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000,
   #        0.342, 0.0, 0.0, 0.940, 0, -0.477, -0.220] # gt
   # data: [0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000,
   #        0.312, 0.0, 0.0, 0.940, 0, -0.500, -0.240] # gt_noise
   data: [0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000,
          0.3173, 0.0, 0.0, 0.9483, 0.009, -0.4939, -0.2226] # estimate
   # data: [0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000,
   #        0.31, 0.0, 0.0, 0.94, 0, -0.2, 0.0] # initialization

# <!-- laser_0 to laser_1 -->
# <!-- 0.342, 0.0, 0.0, 0.940, 0, -0.477, -0.220 -->
# <!-- base_link to laser_0 -->
# <!-- -0.216 0 0 0.976 0 0.266 0.734 -->
# <!-- base_link to laser_1 -->
# <!-- 0.131 0 0 0.991 0 -0.260 0.736 -->

#unsynchronization parameters
estimate_td: 0                      # 0 have an accurate time offset among sensors
                                    # 1 online estimate time offset among sensors

td: !!opencv-matrix                 # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)
   rows: 1
   cols: 2
   dt: d
   data: [0, 0]

idx_ref: 0

cloud0_topic: "/left/velodyne_points"
cloud1_topic: "/right/velodyne_points"

laser_sync_threshold: 0.07
roi_range: 0.5
roi_range_mapping: 15

# odometry parameters
scan_period: 0.1
distance_sq_threshold: 25
nearby_scan: 2.5

# movement type
planar_movement: 1

# feature corresponding paprameters
min_match_sq_dis: 1.0
min_plane_dis: 0.2

# factor
marginalization_factor: 1
point_plane_factor: 1
point_edge_factor: 1
prior_factor: 0
prior_factor_pos: 0.5
prior_factor_rot: 1
check_jacobian: 0

pcl_viewer: 0
pcl_viewer_normal_ratio: 10

# calibration converage parameters
n_cumu_feature: 10
eig_initial: 200
eig_thre_calib: 1000
n_calib: 10

# mapping uncertainty
uncertainty_calib: !!opencv-matrix
   rows: 1
   cols: 9
   dt: d
   data: [0.01, 0.01, 0.01, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025, 0.0025] # rotation, translation, point

norm_threshold: 0.82

map_corner_res: 0.2
map_surf_res: 0.4
map_eig_thre: 100
#
